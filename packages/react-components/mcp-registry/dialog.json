{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dialog",
  "type": "registry:component",
  "description": "A window overlaid on either the primary window or another dialog window, rendering the content underneath inert.",
  "files": [
    {
      "path": "src/shadcn/components/ui/dialog.tsx",
      "content": "import * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { XIcon } from \"lucide-react\";\nimport type * as React from \"react\";\n\nimport { cn } from \"#shadcn/lib/utils\";\n\n// Dialog overlay styles\nconst dialogOverlayStyles = cn(\n\t// Layout\n\t\"fixed\",\n\t\"inset-0\",\n\t\"z-50\",\n\t// Background\n\t\"bg-black/50\",\n\t// Animations - open\n\t\"data-[state=open]:animate-in\",\n\t\"data-[state=open]:fade-in-0\",\n\t// Animations - closed\n\t\"data-[state=closed]:animate-out\",\n\t\"data-[state=closed]:fade-out-0\",\n);\n\n// Dialog content styles\nconst dialogContentStyles = cn(\n\t// Layout\n\t\"fixed\",\n\t\"top-[50%]\",\n\t\"left-[50%]\",\n\t\"z-50\",\n\t\"grid\",\n\t\"w-full\",\n\t\"max-w-[calc(100%-2rem)]\",\n\t\"translate-x-[-50%]\",\n\t\"translate-y-[-50%]\",\n\t\"gap-4\",\n\t// Shape\n\t\"rounded-lg\",\n\t// Borders\n\t\"border\",\n\t\"border-border-primary\",\n\t// Background & Colors\n\t\"bg-bg-primary\",\n\t// Spacing\n\t\"p-6\",\n\t// Shadow\n\t\"shadow-lg\",\n\t// Animation duration\n\t\"duration-200\",\n\t// Responsive\n\t\"sm:max-w-lg\",\n\t// Animations - open\n\t\"data-[state=open]:animate-in\",\n\t\"data-[state=open]:fade-in-0\",\n\t\"data-[state=open]:zoom-in-95\",\n\t// Animations - closed\n\t\"data-[state=closed]:animate-out\",\n\t\"data-[state=closed]:fade-out-0\",\n\t\"data-[state=closed]:zoom-out-95\",\n);\n\n// Dialog close button styles\nconst dialogCloseButtonStyles = cn(\n\t// Layout\n\t\"absolute\",\n\t\"top-4\",\n\t\"right-4\",\n\t// Shape\n\t\"rounded-xs\",\n\t// Opacity\n\t\"opacity-70\",\n\t\"hover:opacity-100\",\n\t// Transitions\n\t\"transition-opacity\",\n\t// Focus\n\t\"focus:ring-2\",\n\t\"focus:ring-utility-blue/70\",\n\t\"focus:ring-offset-2\",\n\t\"focus:outline-hidden\",\n\t// Disabled\n\t\"disabled:pointer-events-none\",\n\t// SVG styles\n\t\"[&_svg]:pointer-events-none\",\n\t\"[&_svg]:shrink-0\",\n\t\"[&_svg:not([class*='size-'])]:size-4\",\n\t// States\n\t\"data-[state=open]:bg-bg-secondary\",\n\t\"data-[state=open]:text-text-secondary\",\n);\n\nfunction Dialog({\n\t...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n\treturn <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\n}\n\nfunction DialogTrigger({\n\t...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n\treturn <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\n}\n\nfunction DialogPortal({\n\t...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n\treturn <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\n}\n\nfunction DialogClose({\n\t...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n\treturn <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\n}\n\nfunction DialogOverlay({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n\treturn (\n\t\t<DialogPrimitive.Overlay\n\t\t\tdata-slot=\"dialog-overlay\"\n\t\t\tclassName={cn(dialogOverlayStyles, className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction DialogContent({\n\tclassName,\n\tchildren,\n\tshowCloseButton = true,\n\t...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n\tshowCloseButton?: boolean;\n}) {\n\treturn (\n\t\t<DialogPortal data-slot=\"dialog-portal\">\n\t\t\t<DialogOverlay />\n\t\t\t<DialogPrimitive.Content\n\t\t\t\tdata-slot=\"dialog-content\"\n\t\t\t\tclassName={cn(dialogContentStyles, className)}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t\t{showCloseButton && (\n\t\t\t\t\t<DialogPrimitive.Close\n\t\t\t\t\t\tdata-slot=\"dialog-close\"\n\t\t\t\t\t\tclassName={dialogCloseButtonStyles}\n\t\t\t\t\t>\n\t\t\t\t\t\t<XIcon />\n\t\t\t\t\t\t<span className=\"sr-only\">Close</span>\n\t\t\t\t\t</DialogPrimitive.Close>\n\t\t\t\t)}\n\t\t\t</DialogPrimitive.Content>\n\t\t</DialogPortal>\n\t);\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"dialog-header\"\n\t\t\tclassName={cn(\n\t\t\t\t\"flex\",\n\t\t\t\t\"flex-col\",\n\t\t\t\t\"gap-2\",\n\t\t\t\t\"text-center\",\n\t\t\t\t\"sm:text-left\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"dialog-footer\"\n\t\t\tclassName={cn(\n\t\t\t\t\"flex\",\n\t\t\t\t\"flex-col-reverse\",\n\t\t\t\t\"gap-2\",\n\t\t\t\t\"sm:flex-row\",\n\t\t\t\t\"sm:justify-end\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction DialogTitle({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n\treturn (\n\t\t<DialogPrimitive.Title\n\t\t\tdata-slot=\"dialog-title\"\n\t\t\tclassName={cn(\"text-lg\", \"leading-none\", \"font-semibold\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction DialogDescription({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n\treturn (\n\t\t<DialogPrimitive.Description\n\t\t\tdata-slot=\"dialog-description\"\n\t\t\tclassName={cn(\"text-text-secondary\", \"text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport {\n\tDialog,\n\tDialogClose,\n\tDialogContent,\n\tDialogDescription,\n\tDialogFooter,\n\tDialogHeader,\n\tDialogOverlay,\n\tDialogPortal,\n\tDialogTitle,\n\tDialogTrigger,\n};\n",
      "type": "registry:component"
    },
    {
      "path": "src/shadcn/components/ui/dialog.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport { Button } from \"#shadcn/components/ui/button\";\nimport {\n\tDialog,\n\tDialogClose,\n\tDialogContent,\n\tDialogDescription,\n\tDialogFooter,\n\tDialogHeader,\n\tDialogTitle,\n\tDialogTrigger,\n} from \"#shadcn/components/ui/dialog\";\nimport { Input } from \"#shadcn/components/ui/input\";\nimport { Label } from \"#shadcn/components/ui/label\";\n\nconst meta = {\n\ttitle: \"Component/Dialog\",\n} satisfies Meta;\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nexport const Demo = {\n\trender: () => (\n\t\t<Dialog>\n\t\t\t<form>\n\t\t\t\t<DialogTrigger asChild>\n\t\t\t\t\t<Button variant=\"secondary\">Open Dialog</Button>\n\t\t\t\t</DialogTrigger>\n\t\t\t\t<DialogContent className=\"sm:max-w-[425px]\">\n\t\t\t\t\t<DialogHeader>\n\t\t\t\t\t\t<DialogTitle>Edit profile</DialogTitle>\n\t\t\t\t\t\t<DialogDescription>\n\t\t\t\t\t\t\tMake changes to your profile here. Click save when you&apos;re\n\t\t\t\t\t\t\tdone.\n\t\t\t\t\t\t</DialogDescription>\n\t\t\t\t\t</DialogHeader>\n\t\t\t\t\t<div className=\"grid gap-4\">\n\t\t\t\t\t\t<div className=\"grid gap-3\">\n\t\t\t\t\t\t\t<Label htmlFor=\"name-1\">Name</Label>\n\t\t\t\t\t\t\t<Input id=\"name-1\" name=\"name\" defaultValue=\"Pedro Duarte\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"grid gap-3\">\n\t\t\t\t\t\t\t<Label htmlFor=\"username-1\">Username</Label>\n\t\t\t\t\t\t\t<Input id=\"username-1\" name=\"username\" defaultValue=\"@peduarte\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DialogFooter>\n\t\t\t\t\t\t<DialogClose asChild>\n\t\t\t\t\t\t\t<Button variant=\"secondary\">Cancel</Button>\n\t\t\t\t\t\t</DialogClose>\n\t\t\t\t\t\t<Button type=\"submit\">Save changes</Button>\n\t\t\t\t\t</DialogFooter>\n\t\t\t\t</DialogContent>\n\t\t\t</form>\n\t\t</Dialog>\n\t),\n} satisfies Story;\n",
      "type": "registry:ui"
    }
  ]
}