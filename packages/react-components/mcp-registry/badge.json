{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge",
  "type": "registry:component",
  "description": "Displays a badge or a component that looks like a badge.",
  "files": [
    {
      "path": "src/shadcn/components/ui/badge.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport type * as React from \"react\";\n\nimport { cn } from \"#shadcn/lib/utils\";\n\n// Base badge styles\nconst baseBadgeStyles = cn(\n\t// Layout\n\t\"inline-flex\",\n\t\"items-center\",\n\t\"justify-center\",\n\t\"w-fit\",\n\t\"whitespace-nowrap\",\n\t\"shrink-0\",\n\t\"gap-1\",\n\t\"overflow-hidden\",\n\t// Shape\n\t\"rounded-md\",\n\t// Borders\n\t\"border\",\n\t// Spacing\n\t\"px-2\",\n\t\"py-0.5\",\n\t// Typography\n\t\"text-xs\",\n\t\"font-medium\",\n\t// SVG\n\t\"[&>svg]:size-3\",\n\t\"[&>svg]:pointer-events-none\",\n\t// Transitions\n\t\"transition-[color,box-shadow]\",\n\t// Focus\n\t\"focus-visible:ring-2\",\n\t\"focus-visible:ring-utility-blue/70\",\n\t// Invalid\n\t\"aria-invalid:ring-2\",\n\t\"aria-invalid:ring-utility-red/70\",\n\t\"aria-invalid:border-border-error\",\n);\n\nconst badgeVariants = cva(baseBadgeStyles, {\n\tvariants: {\n\t\tvariant: {\n\t\t\tdefault: cn(\n\t\t\t\t\"border-transparent\",\n\t\t\t\t\"bg-bg-link\",\n\t\t\t\t\"text-text-primary_on-brand\",\n\t\t\t\t\"[a&]:hover:bg-bg-link_hover\",\n\t\t\t),\n\t\t\tsecondary: cn(\n\t\t\t\t\"border-transparent\",\n\t\t\t\t\"bg-bg-secondary\",\n\t\t\t\t\"text-text-secondary\",\n\t\t\t\t\"[a&]:hover:bg-bg-tertiary\",\n\t\t\t),\n\t\t\tdestructive: cn(\n\t\t\t\t\"border-transparent\",\n\t\t\t\t\"bg-bg-error-primary_inverse\",\n\t\t\t\t\"text-text-primary_on-brand\",\n\t\t\t\t\"[a&]:hover:bg-bg-error-primary_inverse_hover\",\n\t\t\t\t\"focus-visible:ring-utility-red/70\",\n\t\t\t),\n\t\t\toutline: cn(\n\t\t\t\t\"text-text-primary\",\n\t\t\t\t\"border-border-primary\",\n\t\t\t\t\"[a&]:hover:bg-bg-secondary\",\n\t\t\t\t\"[a&]:hover:text-text-primary\",\n\t\t\t),\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tvariant: \"default\",\n\t},\n});\n\nfunction Badge({\n\tclassName,\n\tvariant,\n\tasChild = false,\n\t...props\n}: React.ComponentProps<\"span\"> &\n\tVariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n\tconst Comp = asChild ? Slot : \"span\";\n\n\treturn (\n\t\t<Comp\n\t\t\tdata-slot=\"badge\"\n\t\t\tclassName={cn(badgeVariants({ variant }), className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport { Badge, badgeVariants };\n",
      "type": "registry:component"
    },
    {
      "path": "src/shadcn/components/ui/badge.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react-vite\";\nimport { BadgeCheckIcon } from \"lucide-react\";\nimport { Badge } from \"#shadcn/components/ui/badge\";\n\nconst meta = {\n\ttitle: \"Component/Badge\",\n} satisfies Meta;\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nexport const Demo = {\n\trender: () => (\n\t\t<div className=\"flex flex-col items-center gap-2\">\n\t\t\t<div className=\"flex w-full flex-wrap gap-2\">\n\t\t\t\t<Badge>Badge</Badge>\n\t\t\t\t<Badge variant=\"secondary\">Secondary</Badge>\n\t\t\t\t<Badge variant=\"destructive\">Destructive</Badge>\n\t\t\t\t<Badge variant=\"outline\">Outline</Badge>\n\t\t\t</div>\n\t\t\t<div className=\"flex w-full flex-wrap gap-2\">\n\t\t\t\t<Badge\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tclassName=\"bg-blue-500 text-white dark:bg-blue-600\"\n\t\t\t\t>\n\t\t\t\t\t<BadgeCheckIcon />\n\t\t\t\t\tVerified\n\t\t\t\t</Badge>\n\t\t\t\t<Badge className=\"h-5 min-w-5 rounded-full px-1 font-mono tabular-nums\">\n\t\t\t\t\t8\n\t\t\t\t</Badge>\n\t\t\t\t<Badge\n\t\t\t\t\tclassName=\"h-5 min-w-5 rounded-full px-1 font-mono tabular-nums\"\n\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t>\n\t\t\t\t\t99\n\t\t\t\t</Badge>\n\t\t\t\t<Badge\n\t\t\t\t\tclassName=\"h-5 min-w-5 rounded-full px-1 font-mono tabular-nums\"\n\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t>\n\t\t\t\t\t20+\n\t\t\t\t</Badge>\n\t\t\t</div>\n\t\t</div>\n\t),\n} satisfies Story;\n",
      "type": "registry:ui"
    }
  ]
}