{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "menubar",
  "type": "registry:component",
  "description": "A visually persistent menu common in desktop applications that provides quick access to a consistent set of commands.",
  "files": [
    {
      "path": "src/shadcn/components/ui/menubar.tsx",
      "content": "import * as MenubarPrimitive from \"@radix-ui/react-menubar\";\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from \"lucide-react\";\nimport type * as React from \"react\";\n\nimport { cn } from \"#shadcn/lib/utils\";\n\n// Menubar styles\nconst menubarStyles = cn(\n\t\"bg-background\",\n\t\"flex\",\n\t\"h-9\",\n\t\"items-center\",\n\t\"gap-1\",\n\t\"rounded-md\",\n\t\"border\",\n\t\"p-1\",\n\t\"shadow-xs\",\n);\n\n// Menubar trigger styles\nconst menubarTriggerStyles = cn(\n\t\"focus:bg-accent\",\n\t\"focus:text-accent-foreground\",\n\t\"data-[state=open]:bg-accent\",\n\t\"data-[state=open]:text-accent-foreground\",\n\t\"flex\",\n\t\"items-center\",\n\t\"rounded-sm\",\n\t\"px-2\",\n\t\"py-1\",\n\t\"text-sm\",\n\t\"font-medium\",\n\t\"outline-hidden\",\n\t\"select-none\",\n);\n\n// Menubar content styles\nconst menubarContentStyles = cn(\n\t\"bg-popover\",\n\t\"text-popover-foreground\",\n\t\"data-[state=open]:animate-in\",\n\t\"data-[state=closed]:fade-out-0\",\n\t\"data-[state=open]:fade-in-0\",\n\t\"data-[state=closed]:zoom-out-95\",\n\t\"data-[state=open]:zoom-in-95\",\n\t\"data-[side=bottom]:slide-in-from-top-2\",\n\t\"data-[side=left]:slide-in-from-right-2\",\n\t\"data-[side=right]:slide-in-from-left-2\",\n\t\"data-[side=top]:slide-in-from-bottom-2\",\n\t\"z-50\",\n\t\"min-w-[12rem]\",\n\t\"origin-(--radix-menubar-content-transform-origin)\",\n\t\"overflow-hidden\",\n\t\"rounded-md\",\n\t\"border\",\n\t\"p-1\",\n\t\"shadow-md\",\n);\n\n// Menubar item styles\nconst menubarItemStyles = cn(\n\t\"focus:bg-accent\",\n\t\"focus:text-accent-foreground\",\n\t\"data-[variant=destructive]:text-destructive\",\n\t\"data-[variant=destructive]:focus:bg-destructive/10\",\n\t\"dark:data-[variant=destructive]:focus:bg-destructive/20\",\n\t\"data-[variant=destructive]:focus:text-destructive\",\n\t\"data-[variant=destructive]:*:[svg]:!text-destructive\",\n\t\"[&_svg:not([class*='text-'])]:text-muted-foreground\",\n\t\"relative\",\n\t\"flex\",\n\t\"cursor-default\",\n\t\"items-center\",\n\t\"gap-2\",\n\t\"rounded-sm\",\n\t\"px-2\",\n\t\"py-1.5\",\n\t\"text-sm\",\n\t\"outline-hidden\",\n\t\"select-none\",\n\t\"data-[disabled]:pointer-events-none\",\n\t\"data-[disabled]:opacity-50\",\n\t\"data-[inset]:pl-8\",\n\t\"[&_svg]:pointer-events-none\",\n\t\"[&_svg]:shrink-0\",\n\t\"[&_svg:not([class*='size-'])]:size-4\",\n);\n\n// Menubar checkbox/radio item styles\nconst menubarCheckboxRadioItemStyles = cn(\n\t\"focus:bg-accent\",\n\t\"focus:text-accent-foreground\",\n\t\"relative\",\n\t\"flex\",\n\t\"cursor-default\",\n\t\"items-center\",\n\t\"gap-2\",\n\t\"rounded-xs\",\n\t\"py-1.5\",\n\t\"pr-2\",\n\t\"pl-8\",\n\t\"text-sm\",\n\t\"outline-hidden\",\n\t\"select-none\",\n\t\"data-[disabled]:pointer-events-none\",\n\t\"data-[disabled]:opacity-50\",\n\t\"[&_svg]:pointer-events-none\",\n\t\"[&_svg]:shrink-0\",\n\t\"[&_svg:not([class*='size-'])]:size-4\",\n);\n\n// Menubar indicator styles\nconst menubarIndicatorStyles = cn(\n\t\"pointer-events-none\",\n\t\"absolute\",\n\t\"left-2\",\n\t\"flex\",\n\t\"size-3.5\",\n\t\"items-center\",\n\t\"justify-center\",\n);\n\n// Menubar label styles\nconst menubarLabelStyles = cn(\n\t\"px-2\",\n\t\"py-1.5\",\n\t\"text-sm\",\n\t\"font-medium\",\n\t\"data-[inset]:pl-8\",\n);\n\n// Menubar separator styles\nconst menubarSeparatorStyles = cn(\"bg-border\", \"-mx-1\", \"my-1\", \"h-px\");\n\n// Menubar shortcut styles\nconst menubarShortcutStyles = cn(\n\t\"text-muted-foreground\",\n\t\"ml-auto\",\n\t\"text-xs\",\n\t\"tracking-widest\",\n);\n\n// Menubar sub trigger styles\nconst menubarSubTriggerStyles = cn(\n\t\"focus:bg-(--color-surface-1)\",\n\t\"data-[state=open]:bg-(--color-surface-1)\",\n\t\"flex\",\n\t\"items-center\",\n\t\"rounded-sm\",\n\t\"px-2\",\n\t\"py-1\",\n\t\"text-sm\",\n\t\"font-medium\",\n\t\"outline-hidden\",\n\t\"select-none\",\n);\n\n// Menubar sub content styles\nconst menubarSubContentStyles = cn(\n\t\"bg-popover\",\n\t\"text-popover-foreground\",\n\t\"data-[state=open]:animate-in\",\n\t\"data-[state=closed]:animate-out\",\n\t\"data-[state=closed]:fade-out-0\",\n\t\"data-[state=open]:fade-in-0\",\n\t\"data-[state=closed]:zoom-out-95\",\n\t\"data-[state=open]:zoom-in-95\",\n\t\"data-[side=bottom]:slide-in-from-top-2\",\n\t\"data-[side=left]:slide-in-from-right-2\",\n\t\"data-[side=right]:slide-in-from-left-2\",\n\t\"data-[side=top]:slide-in-from-bottom-2\",\n\t\"z-50\",\n\t\"min-w-[8rem]\",\n\t\"origin-(--radix-menubar-content-transform-origin)\",\n\t\"overflow-hidden\",\n\t\"rounded-md\",\n\t\"border\",\n\t\"p-1\",\n\t\"shadow-lg\",\n);\n\nfunction Menubar({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Root>) {\n\treturn (\n\t\t<MenubarPrimitive.Root\n\t\t\tdata-slot=\"menubar\"\n\t\t\tclassName={cn(menubarStyles, className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction MenubarMenu({\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n\treturn <MenubarPrimitive.Menu data-slot=\"menubar-menu\" {...props} />;\n}\n\nfunction MenubarGroup({\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n\treturn <MenubarPrimitive.Group data-slot=\"menubar-group\" {...props} />;\n}\n\nfunction MenubarPortal({\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n\treturn <MenubarPrimitive.Portal data-slot=\"menubar-portal\" {...props} />;\n}\n\nfunction MenubarRadioGroup({\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n\treturn (\n\t\t<MenubarPrimitive.RadioGroup data-slot=\"menubar-radio-group\" {...props} />\n\t);\n}\n\nfunction MenubarTrigger({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Trigger>) {\n\treturn (\n\t\t<MenubarPrimitive.Trigger\n\t\t\tdata-slot=\"menubar-trigger\"\n\t\t\tclassName={cn(menubarTriggerStyles, className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction MenubarContent({\n\tclassName,\n\talign = \"start\",\n\talignOffset = -4,\n\tsideOffset = 8,\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Content>) {\n\treturn (\n\t\t<MenubarPortal>\n\t\t\t<MenubarPrimitive.Content\n\t\t\t\tdata-slot=\"menubar-content\"\n\t\t\t\talign={align}\n\t\t\t\talignOffset={alignOffset}\n\t\t\t\tsideOffset={sideOffset}\n\t\t\t\tclassName={cn(menubarContentStyles, className)}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</MenubarPortal>\n\t);\n}\n\nfunction MenubarItem({\n\tclassName,\n\tinset,\n\tvariant = \"default\",\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Item> & {\n\tinset?: boolean;\n\tvariant?: \"default\" | \"destructive\";\n}) {\n\treturn (\n\t\t<MenubarPrimitive.Item\n\t\t\tdata-slot=\"menubar-item\"\n\t\t\tdata-inset={inset}\n\t\t\tdata-variant={variant}\n\t\t\tclassName={cn(menubarItemStyles, className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction MenubarCheckboxItem({\n\tclassName,\n\tchildren,\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.CheckboxItem>) {\n\treturn (\n\t\t<MenubarPrimitive.CheckboxItem\n\t\t\tdata-slot=\"menubar-checkbox-item\"\n\t\t\tclassName={cn(menubarCheckboxRadioItemStyles, className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t<span className={menubarIndicatorStyles}>\n\t\t\t\t<MenubarPrimitive.ItemIndicator>\n\t\t\t\t\t<CheckIcon className=\"size-4\" />\n\t\t\t\t</MenubarPrimitive.ItemIndicator>\n\t\t\t</span>\n\t\t\t{children}\n\t\t</MenubarPrimitive.CheckboxItem>\n\t);\n}\n\nfunction MenubarRadioItem({\n\tclassName,\n\tchildren,\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioItem>) {\n\treturn (\n\t\t<MenubarPrimitive.RadioItem\n\t\t\tdata-slot=\"menubar-radio-item\"\n\t\t\tclassName={cn(menubarCheckboxRadioItemStyles, className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t<span className={menubarIndicatorStyles}>\n\t\t\t\t<MenubarPrimitive.ItemIndicator>\n\t\t\t\t\t<CircleIcon className=\"size-2 fill-current\" />\n\t\t\t\t</MenubarPrimitive.ItemIndicator>\n\t\t\t</span>\n\t\t\t{children}\n\t\t</MenubarPrimitive.RadioItem>\n\t);\n}\n\nfunction MenubarLabel({\n\tclassName,\n\tinset,\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Label> & {\n\tinset?: boolean;\n}) {\n\treturn (\n\t\t<MenubarPrimitive.Label\n\t\t\tdata-slot=\"menubar-label\"\n\t\t\tdata-inset={inset}\n\t\t\tclassName={cn(menubarLabelStyles, className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction MenubarSeparator({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Separator>) {\n\treturn (\n\t\t<MenubarPrimitive.Separator\n\t\t\tdata-slot=\"menubar-separator\"\n\t\t\tclassName={cn(menubarSeparatorStyles, className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction MenubarShortcut({\n\tclassName,\n\t...props\n}: React.ComponentProps<\"span\">) {\n\treturn (\n\t\t<span\n\t\t\tdata-slot=\"menubar-shortcut\"\n\t\t\tclassName={cn(menubarShortcutStyles, className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction MenubarSub({\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n\treturn <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />;\n}\n\nfunction MenubarSubTrigger({\n\tclassName,\n\tinset,\n\tchildren,\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.SubTrigger> & {\n\tinset?: boolean;\n}) {\n\treturn (\n\t\t<MenubarPrimitive.SubTrigger\n\t\t\tdata-slot=\"menubar-sub-trigger\"\n\t\t\tdata-inset={inset}\n\t\t\tclassName={cn(menubarSubTriggerStyles, className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t\t<ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n\t\t</MenubarPrimitive.SubTrigger>\n\t);\n}\n\nfunction MenubarSubContent({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof MenubarPrimitive.SubContent>) {\n\treturn (\n\t\t<MenubarPrimitive.SubContent\n\t\t\tdata-slot=\"menubar-sub-content\"\n\t\t\tclassName={cn(menubarSubContentStyles, className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport {\n\tMenubar,\n\tMenubarPortal,\n\tMenubarMenu,\n\tMenubarTrigger,\n\tMenubarContent,\n\tMenubarGroup,\n\tMenubarSeparator,\n\tMenubarLabel,\n\tMenubarItem,\n\tMenubarShortcut,\n\tMenubarCheckboxItem,\n\tMenubarRadioGroup,\n\tMenubarRadioItem,\n\tMenubarSub,\n\tMenubarSubTrigger,\n\tMenubarSubContent,\n};\n",
      "type": "registry:component"
    }
  ]
}